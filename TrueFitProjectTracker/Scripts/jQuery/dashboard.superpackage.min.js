function getDayNamesFromDayOfWeek(c) { var d = ["S", "M", "T", "W", "R", "F", "S"]; var a = []; for (var b = c; b < c + 7; b++) { a.push(d[b % 7]) } return a } function getMonthNamesFromMonthAndYear(f, c, d, e) { var b = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]; var a = []; while (f <= d || c <= e) { if (f == 0 || a.length == 0) { a.push(b[f] + ", " + c.toString()) } else { a.push(b[f]) } f++; if (f == 12) { f = 0; c++ } } return a } $(function() { $("button#bug-submit").click(function() { var d = document.getElementById("bug-form"); var c = d.contentWindow || d.contentDocument; if (c.document) { c = c.document } if (d.contentWindow.$("form").validationEngine("validate")) { var b = c.getElementsByTagName("form"); b[0].submit() } }); var a = null; $("ul.task-list li div").click(function() { if (a != null) { a.removeClass("open") } a = $(this); a.addClass("open") }); $("button.pane-close").click(function() { if (a != null) { a.removeClass("open"); return false } }); $(document).keyup(function(b) { if (b.keyCode == 27 && a != null) { a.removeClass("open"); return false } if (b.keyCode == 37) { $("div.carousel").carousel("prev"); return false } if (b.keyCode == 39) { $("div.carousel").carousel("next"); return false } }) }); (function(a) { a.fn.burndown = function(d, b, c) { a(this).highcharts({ chart: { backgroundColor: null, borderRadius: 0, spacing: [40, 10, 40, 10] }, colors: [c], credits: { enabled: false }, exporting: { enabled: false }, legend: { enabled: false }, title: { text: null }, tooltip: { formatter: function() { return "<b>" + this.y + "</b> " + (this.y == 1 ? "hour" : "hours") + " remaining for <b>" + this.x + "</b>" } }, series: [{ name: "Projected Burndown", data: d }, { name: "Ideal Burndown", data: [{ x: 0, y: d[0] }, { x: d.length - 1, y: d[d.length - 1] }], dashStyle: "dash" }], xAxis: { categories: b, labels: { style: { color: "#313B47", "font-size": "12px", "font-weight": "bold" } }, lineColor: "#313B47", tickColor: "#CCCCCC" }, yAxis: { allowDecimals: false, gridLineColor: "#CCCCCC", labels: { style: { color: "#313B47", "font-size": "12px", "font-weight": "bold" } }, lineColor: "#313B47", lineWidth: 1, min: 0, title: { style: { color: "#313B47" }, text: "Remaining Hours" } } }) } })(jQuery); (function(a) { a.fn.progress = function(b) { a(this).highcharts({ chart: { type: "solidgauge" }, credits: { enabled: false }, pane: { background: { backgroundColor: null, innerRadius: "60%", outerRadius: "100%", shape: "arc" }, center: ["50%", "85%"], endAngle: 90, size: "140%", startAngle: -90 }, series: [{ data: [{ color: "#F2F3F5", y: 100 }, { color: "#A48AD4", y: b }] }], title: { text: null }, tooltip: { enabled: false }, yAxis: { labels: { formatter: function() { return this.value + "%" }, style: { color: "#313B47", "font-size": "12px", "font-weight": "bold" }, y: 16 }, lineWidth: 0, max: 100, min: 0, minorTickInterval: null, tickPixelInterval: 400, tickWidth: 0, title: { text: null } } }) } })(jQuery); (function(a) { a.fn.recent = function(e, f, c) { var b = 1; for (var d = 0; d < e.length; ++d) { if (e[d] > b) { b = e[d] } } a(this).highcharts({ chart: { backgroundColor: null, spacing: [0, 0, 10, 0], type: "column" }, credits: { enabled: false }, exporting: { enabled: false }, legend: { enabled: false }, plotOptions: { column: { animation: false, borderColor: "transparent", borderWidth: 0, stacking: "normal", states: { hover: { enabled: false } } } }, series: [{ color: "#F2F3F5", data: function() { var g = []; for (var h = 0; h < e.length; ++h) { g[h] = b - e[h] } return g }(), dataLabels: { color: "#313B47", enabled: true, formatter: function() { return (this.y == b) ? "0" : (b - this.y) }, style: { "font-size": "12px" }, verticalAlign: "top", y: 10 } }, { color: c, data: e }], title: { text: null }, tooltip: { enabled: false }, xAxis: { categories: f, gridLineColor: "transparent", lineWidth: 0, minorGridLineWidth: 0, labels: { style: { color: "#313B47", "font-size": "12px", "font-weight": "bold" }, y: 20 }, tickColor: "transparent" }, yAxis: { gridLineColor: "transparent", labels: { enabled: false }, lineWidth: 0, minorGridLineWidth: 0, title: { text: null } } }) } })(jQuery); (function(a) { a.fn.rotary = function(c, b) { a(this).highcharts({ chart: { backgroundColor: null, height: 250, spacing: [0, 0, 0, 0] }, credits: { enabled: false }, exporting: { enabled: false }, plotOptions: { pie: { animation: false, borderWidth: 0, dataLabels: { enabled: false }, states: { hover: { enabled: false } } } }, series: [{ data: [{ color: b, y: c }, { color: "#313B47", y: 100 - c }], innerSize: "85%", type: "pie" }], title: { text: null }, tooltip: { enabled: false } }) } })(jQuery);